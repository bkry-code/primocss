@if $use-layout-grids == true {
  /// LAYOUT - Flex grid

  //
  // Sets the grid spacing value used for gutters
  //

  $grid-spacing-unit:    $global-spacing-unit !default;
  $grid-max-columns:     12 !default;
  $grid-column-value:    100% / $grid-max-columns;



  //
  // Flex grid based on the work by Heydon Pickering
  // https://github.com/Heydon/fukol-grids. Can be used indipendantly or
  // inconjunction with the column grid classes for explict widths.
  //

  .grid-row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -#{$grid-spacing-unit};
    margin-right: -#{$grid-spacing-unit};

    //
    // Sets a small margin offests when on responsive is true
    //

    @if $global-responsive == true {
      @include set-breakpoint-max(md) {
        margin-left: -#{$global-spacing-unit-sm};
        margin-right: -#{$global-spacing-unit-sm};
      }

      @include set-breakpoint-max(sm) {
        margin-left: -#{$global-spacing-unit-xs};
        margin-right: -#{$global-spacing-unit-xs};
      }
    } // endif

    > * {
      flex: 1 0 10rem;
      margin-left: $grid-spacing-unit;
      margin-right: $grid-spacing-unit;
      margin-top: 0;

      //
      // Sets a small margin offests when on responsive is true
      //

      @if $global-responsive == true {
        @include set-breakpoint-max(md) {
          margin-left: $global-spacing-unit-sm;
          margin-right: $global-spacing-unit-sm;
        }

        @include set-breakpoint-max(sm) {
          margin-left: $global-spacing-unit-xs;
          margin-right: $global-spacing-unit-xs;
        }
      } // endif

      //
      // Sets a blanket 100% width on all grid items when at the md 768px
      // breakpoint.
      //
      // 1. Sets the Lobotomized owl selector to work on mobile
      //

      @if $global-responsive == true {
        @include set-breakpoint-max(md) {
          flex-basis: 100%;
          max-width: 100%;

          + * {
            margin-top: $grid-spacing-unit; // [1 //
          }
        }

        @each $breakpoint in map-keys($global-breakpoints) {
          @include set-breakpoint-min($breakpoint) {
            $prefix: breakpoint-min-prefix($breakpoint, $global-breakpoints);

            @for $grid-col from 1 through $grid-max-columns {

              $grid-width: $grid-column-value * $grid-col;

              &.grid#{$prefix}-col-#{$grid-col} {
                flex-basis: calc(#{$grid-width} - #{$grid-spacing-unit} * 2);
                max-width: calc(#{$grid-width} - #{$grid-spacing-unit} * 2);
              }
            }
          }
        }
      } // endif
    }

    //
    // Removes all gutters on grid rows and columns
    //

    &--no-gutters {
      margin-left: 0;
      margin-right: 0;

      > * {
        margin-left: 0;
        margin-right: 0;
      }
    }

    //
    // Centers all flex items hotizontally regardless of width
    //

    &--center {
      align-items: center;
      justify-content: center;
    }
  }
} // endif
